%!PS-Adobe-2.0 EPSF-2.0
%%Title: fig_qlen_bw_aqm.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Tue Sep  1 11:15:48 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -83 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (fig_qlen_bw_aqm.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (linhth)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Sep  1 11:15:48 2015)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 250 scalefont setfont
2.000 UL
LTb
1.000 UL
LTa
1225 839 M
5524 0 V
stroke
2.000 UL
LTb
1225 839 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 839 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 0)]
] -83.3 MRshow
2.000 UL
LTb
1.000 UL
LTa
1225 1619 M
5524 0 V
stroke
2.000 UL
LTb
1225 1619 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 1619 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 20)]
] -83.3 MRshow
2.000 UL
LTb
1.000 UL
LTa
1225 2399 M
5524 0 V
stroke
2.000 UL
LTb
1225 2399 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 2399 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 40)]
] -83.3 MRshow
2.000 UL
LTb
1.000 UL
LTa
1225 3179 M
5524 0 V
stroke
2.000 UL
LTb
1225 3179 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 3179 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 60)]
] -83.3 MRshow
2.000 UL
LTb
1.000 UL
LTa
1225 3959 M
2761 0 V
2613 0 R
150 0 V
stroke
2.000 UL
LTb
1225 3959 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 3959 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 80)]
] -83.3 MRshow
2.000 UL
LTb
1.000 UL
LTa
1225 4739 M
5524 0 V
stroke
2.000 UL
LTb
1225 4739 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 4739 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 100)]
] -83.3 MRshow
2.000 UL
LTb
1.000 UL
LTa
1225 800 M
0 3939 V
stroke
2.000 UL
LTb
1225 800 M
0 63 V
0 3876 R
0 -63 V
stroke
1225 550 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 1)]
] -83.3 MCshow
2.000 UL
LTb
1779 800 M
0 31 V
0 3908 R
0 -31 V
2104 800 M
0 31 V
0 3908 R
0 -31 V
2334 800 M
0 31 V
0 3908 R
0 -31 V
2512 800 M
0 31 V
0 3908 R
0 -31 V
2658 800 M
0 31 V
0 3908 R
0 -31 V
2781 800 M
0 31 V
0 3908 R
0 -31 V
2888 800 M
0 31 V
0 3908 R
0 -31 V
2982 800 M
0 31 V
0 3908 R
0 -31 V
stroke
1.000 UL
LTa
3066 800 M
0 3939 V
stroke
2.000 UL
LTb
3066 800 M
0 63 V
0 3876 R
0 -63 V
stroke
3066 550 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 10)]
] -83.3 MCshow
2.000 UL
LTb
3621 800 M
0 31 V
0 3908 R
0 -31 V
3945 800 M
0 31 V
0 3908 R
0 -31 V
4175 800 M
0 31 V
0 3908 R
0 -31 V
4353 800 M
0 31 V
0 3908 R
0 -31 V
4499 800 M
0 31 V
0 3908 R
0 -31 V
4622 800 M
0 31 V
0 3908 R
0 -31 V
4729 800 M
0 31 V
0 3908 R
0 -31 V
4823 800 M
0 31 V
0 3908 R
0 -31 V
stroke
1.000 UL
LTa
4908 800 M
0 2626 V
0 1250 R
0 63 V
stroke
2.000 UL
LTb
4908 800 M
0 63 V
0 3876 R
0 -63 V
stroke
4908 550 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 100)]
] -83.3 MCshow
2.000 UL
LTb
5462 800 M
0 31 V
0 3908 R
0 -31 V
5786 800 M
0 31 V
0 3908 R
0 -31 V
6016 800 M
0 31 V
0 3908 R
0 -31 V
6195 800 M
0 31 V
0 3908 R
0 -31 V
6341 800 M
0 31 V
0 3908 R
0 -31 V
6464 800 M
0 31 V
0 3908 R
0 -31 V
6571 800 M
0 31 V
0 3908 R
0 -31 V
6665 800 M
0 31 V
0 3908 R
0 -31 V
stroke
1.000 UL
LTa
6749 800 M
0 3939 V
stroke
2.000 UL
LTb
6749 800 M
0 63 V
0 3876 R
0 -63 V
stroke
6749 550 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 1000)]
] -83.3 MCshow
2.000 UL
LTb
2.000 UL
LTb
1225 4739 N
0 -3939 V
5524 0 V
0 3939 V
-5524 0 V
Z stroke
LCb setrgbcolor
200 2769 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 250.0 0.0 true true 0 (Mean Queue Length \(%\))]
] -83.3 MCshow
grestore
LTb
LCb setrgbcolor
3987 175 M
[ [(Helvetica) 250.0 0.0 true true 0 (Link Bandwidth \(Mbps\))]
] -83.3 MCshow
LTb
1.000 UP
2.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
0.00 0.00 0.00 C LCb setrgbcolor
5636 4551 M
[ [(Helvetica) 250.0 0.0 true true 0 (DropTail)]
] -83.3 MRshow
LT0
0.00 0.00 0.00 C 5786 4551 M
663 0 V
1225 4489 M
879 -128 V
408 -625 V
269 -578 V
285 -376 V
325 -88 V
230 82 V
324 -240 V
554 -78 V
409 248 V
324 -81 V
230 491 V
324 -170 V
230 368 V
179 -148 V
269 -639 V
107 154 V
94 -623 V
84 795 V
1225 4489 Pls
2104 4361 Pls
2512 3736 Pls
2781 3158 Pls
3066 2782 Pls
3391 2694 Pls
3621 2776 Pls
3945 2536 Pls
4499 2458 Pls
4908 2706 Pls
5232 2625 Pls
5462 3116 Pls
5786 2946 Pls
6016 3314 Pls
6195 3166 Pls
6464 2527 Pls
6571 2681 Pls
6665 2058 Pls
6749 2853 Pls
6117 4551 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
1.00 0.00 0.00 C LCb setrgbcolor
5636 4301 M
[ [(Helvetica) 250.0 0.0 true true 0 (RED)]
] -83.3 MRshow
LT1
1.00 0.00 0.00 C 5786 4301 M
663 0 V
1225 4682 M
2104 3245 L
2512 1873 L
269 -396 V
285 -202 V
325 -69 V
230 -59 V
324 -39 V
554 -45 V
409 -4 V
324 -31 V
230 -29 V
324 -42 V
230 -68 V
179 9 V
269 -55 V
107 14 V
94 -18 V
84 1 V
1225 4682 Crs
2104 3245 Crs
2512 1873 Crs
2781 1477 Crs
3066 1275 Crs
3391 1206 Crs
3621 1147 Crs
3945 1108 Crs
4499 1063 Crs
4908 1059 Crs
5232 1028 Crs
5462 999 Crs
5786 957 Crs
6016 889 Crs
6195 898 Crs
6464 843 Crs
6571 857 Crs
6665 839 Crs
6749 840 Crs
6117 4301 Crs
% End plot #2
% Begin plot #3
1.000 UP
1.500 UL
LT2
0.00 0.00 1.00 C LCb setrgbcolor
5636 4051 M
[ [(Helvetica) 250.0 0.0 true true 0 (FBSM-AQM-CP)]
] -83.3 MRshow
LT2
0.00 0.00 1.00 C 5786 4051 M
663 0 V
1225 4682 M
2104 3216 L
2512 1718 L
269 -442 V
285 -80 V
325 -67 V
230 -61 V
324 -31 V
554 56 V
409 -61 V
324 -58 V
230 32 V
324 -69 V
230 -31 V
179 -9 V
269 -44 V
107 45 V
94 -40 V
84 6 V
1225 4682 Star
2104 3216 Star
2512 1718 Star
2781 1276 Star
3066 1196 Star
3391 1129 Star
3621 1068 Star
3945 1037 Star
4499 1093 Star
4908 1032 Star
5232 974 Star
5462 1006 Star
5786 937 Star
6016 906 Star
6195 897 Star
6464 853 Star
6571 898 Star
6665 858 Star
6749 864 Star
6117 4051 Star
% End plot #3
% Begin plot #4
1.000 UP
1.000 UL
LT3
0.00 0.00 0.00 C LCb setrgbcolor
5636 3801 M
[ [(Helvetica) 250.0 0.0 true true 0 (PI)]
] -83.3 MRshow
LT3
0.00 0.00 0.00 C 5786 3801 M
663 0 V
1225 2401 M
879 -523 V
408 -651 V
269 -216 V
3066 902 L
325 -41 V
230 -12 V
324 -6 V
554 -3 V
409 -1 V
324 0 V
230 0 V
324 0 V
230 0 V
179 0 V
269 0 V
107 0 V
94 0 V
84 0 V
1225 2401 Box
2104 1878 Box
2512 1227 Box
2781 1011 Box
3066 902 Box
3391 861 Box
3621 849 Box
3945 843 Box
4499 840 Box
4908 839 Box
5232 839 Box
5462 839 Box
5786 839 Box
6016 839 Box
6195 839 Box
6464 839 Box
6571 839 Box
6665 839 Box
6749 839 Box
6117 3801 Box
% End plot #4
% Begin plot #5
1.000 UP
1.000 UL
LT4
0.00 0.00 0.00 C LCb setrgbcolor
5636 3551 M
[ [(Helvetica) 250.0 0.0 true true 0 (CoDel)]
] -83.3 MRshow
LT4
0.00 0.00 0.00 C 5786 3551 M
663 0 V
1225 2936 M
2104 1906 L
408 -494 V
269 93 V
285 543 V
325 206 V
230 -6 V
324 424 V
554 -60 V
409 97 V
324 -90 V
230 216 V
324 46 V
6016 1815 L
179 729 V
269 115 V
107 -503 V
94 445 V
84 -340 V
1225 2936 BoxF
2104 1906 BoxF
2512 1412 BoxF
2781 1505 BoxF
3066 2048 BoxF
3391 2254 BoxF
3621 2248 BoxF
3945 2672 BoxF
4499 2612 BoxF
4908 2709 BoxF
5232 2619 BoxF
5462 2835 BoxF
5786 2881 BoxF
6016 1815 BoxF
6195 2544 BoxF
6464 2659 BoxF
6571 2156 BoxF
6665 2601 BoxF
6749 2261 BoxF
6117 3551 BoxF
% End plot #5
2.000 UL
LTb
1225 4739 N
0 -3939 V
5524 0 V
0 3939 V
-5524 0 V
Z stroke
1.000 UP
2.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
