        -:    0:Source:drawing_book.c
        -:    0:Graph:drawing_book.gcno
        -:    0:Data:drawing_book.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/**
        -:    2: * File   : drawing_book.c
        -:    3: * Author : To Hoang Linh
        -:    4: * Date   : 2017-08-28
        -:    5: * ForWhat: Brie's Drawing teacher asks her class to open their n-page book
        -:    6: * to page number p. Brie can either start tuning pages from the front of the
        -:    7: * book (i.e., page number 1) or from the back of the book (i.e., page number n)
        -:    8: * and she always turns page one-by-one (as opposed to skipping through multiple
        -:    9: * pages at once). When she opens the book, page 1 is always on the right side.
        -:   10: * Each page in the book has 2 sides, front and back, except for the last page
        -:   11: * which may only have a front side depending on the total number of pages of
        -:   12: * the book. Given n and p, print the minimum number of pages Brie must turn in
        -:   13: * order to arrive at page p.
        -:   14: */
        -:   15:
        -:   16:/*******************************************************************************
        -:   17: * Includes
        -:   18: ******************************************************************************/
        -:   19:#include <stdio.h>
        -:   20:#include <stdbool.h>
        -:   21:#include <stdint.h>
        -:   22:#include <stdlib.h>
        -:   23:
        -:   24:/*******************************************************************************
        -:   25: * Definitions
        -:   26: ******************************************************************************/
        -:   27:#define MAX_PAGES 100000
        -:   28:#define MIN_PAGES 1
        -:   29:#define SIDES_PER_PAGE 2
        -:   30:
        -:   31:/*******************************************************************************
        -:   32: * Code
        -:   33: ******************************************************************************/
        1:   34:int forward_turn(int total_pages, int wanted_page)
        -:   35:{
        -:   36:    /* start from 1 --> wanted page */
        1:   37:    if (wanted_page%2 == 0)
        -:   38:    {
    #####:   39:        return (wanted_page/SIDES_PER_PAGE);
        -:   40:    }
        -:   41:    else
        -:   42:    {
        1:   43:        return ((wanted_page-1)/SIDES_PER_PAGE);
        -:   44:    }
        -:   45:    return 0;
        -:   46:}
        -:   47:
        1:   48:int reverse_turn(int total_pages, int wanted_page)
        -:   49:{
        -:   50:    /* start from n total_pages --> wanted page */
        1:   51:    if (total_pages%2 == 0)
        -:   52:    {
        1:   53:        if (wanted_page%2 == 0)
        -:   54:        {
    #####:   55:            return (total_pages-wanted_page)/SIDES_PER_PAGE;
        -:   56:        }
        -:   57:        else
        -:   58:        {
        1:   59:            return (total_pages-wanted_page+1)/SIDES_PER_PAGE;
        -:   60:        }
        -:   61:    }
        -:   62:    else
        -:   63:    {
    #####:   64:        return (total_pages-wanted_page)/SIDES_PER_PAGE;
        -:   65:    }
        -:   66:    return 0;
        -:   67:}
        -:   68:
        1:   69:int min(int num1, int num2)
        -:   70:{
        1:   71:    return (num1 > num2 ? num2 : num1);
        -:   72:}
        -:   73: 
        1:   74:int main(void)
        -:   75:{
        -:   76:    /* input n: number of pages in the book */
        -:   77:    int n;
        1:   78:    n = 0;
        3:   79:    while (n < MIN_PAGES || n > MAX_PAGES)
        -:   80:    {
        1:   81:        scanf("%d", &n);
        -:   82:    }
        -:   83:
        -:   84:    /* input p: the page that Brie's teacher wants her to turn to */
        -:   85:    int p;
        1:   86:    p = 0;
        4:   87:    while (p < MIN_PAGES || p > n)
        -:   88:    {
        2:   89:        scanf("%d", &p);
        -:   90:    }
        -:   91:    
        -:   92:    /* output */
        1:   93:    printf("%d", min(forward_turn(n,p), reverse_turn(n,p)));
        -:   94:    
        1:   95:    return 0;
        -:   96:}
